<?php
  
  namespace App\Back\Presenters;
  
  use App\Back\Models\UserModel;
  use App\Helpers\Strings;
  use App\Traits\DatatableTrait;
  use Nette;
  
  /**
   * Class UserPresenter
   *
   * @author  Zdeněk Houdek
   * @created 04.04.2018
   */
  class UserPresenter extends BasePresenter
  {
    use DatatableTrait;
    /** @var bool Do use Datatables plugin */
    protected $datatables = TRUE;
    
    /** @var UserModel */
    protected $model;
    
    
    public function __construct(UserModel $model) {
      $this->model = $model;
    }
    
    protected function startup() {
      parent::startup(); // TODO: Change the autogenerated stub
      $this->setDTColumns([
        'Uživatelské jméno' => 'username',
        'Skupina'           => 'user_group.name',
        'Modul'             => ['column' => 'module.name', 'operator' => '=']
      ]);
      $this->setDTActions([
        'edit' => [
          'button' => '<button title="Upravit uživatele" class="btn btn-theme-datatable btn-sm"><i class="fa fa-pencil"></i></button>',
          'action' => $this->link('edit')
        ],
        'delete' => [
          'button' => '<button title="Smazat uživatele" class="btn btn-theme-datatable btn-sm"><i class="fa fa-trash"></i></button>',
          'action' => $this->link('delete!')
        ]
      ]);
  
      $this->setDTButtons([
        'add' => [
          'class' => 'btn btn-circle btn-theme',
          'title' => 'Přidat uživatele',
          'text' => 'Přidat uživatele',
          'action' => '',
          'icon' => 'plus',
          'action' => $this->link('edit')
        ]
      ]);
    }
  
  
    public function actionEdit() {
      $id = $this->getParameter('rowId');
      $user = $this->model->getItemById($id);
      $this->template->title = $user ?
        "Editovat uživatele" :
        "Přidat uživatele";
      $this->template->user = $user;
      $this->template->modal = FALSE;
      
  
      if ($this->isAjax()) {
        $this->template->modal = TRUE;
        $this->payload->isModal = TRUE;
        $this->redrawControl('modal');
      }
    }
    
    public function handleDelete() {
      $id = $this->getParameter('rowId');
  
      /** CONFIRMED */
      if (!$this->isAjax() || $this->getParameter('confirmed')) {
        $user = $this->model->getItemById($id);
        try {
          //$this->model->delete($user);
        } catch (Exception $e) {
          $this->flashMessage(...Strings::placeholders($user->toArray(),UserModel::_FAIL_DELETE_MESSAGE));
          $this->finishWithPayload(['success' => FALSE]);
        }
        $this->flashMessage(...Strings::placeholders($user->toArray(),UserModel::_SUCCESS_DELETE_MESSAGE));
        $this->finishWithPayload(['success' => TRUE]);
    
        /** PROMPT*/
      } else {
        if ($this->isAjax()) {
          $user = $this->model->getItemById($id)->toArray();
      
          $this->finishWithPayload(
            [
              'id' => $id,
              'prompt' => [
                'title'   => Strings::placeholders($user,'Opravdu chcete smazat uživatele {USERNAME} ?'),
              ]
            ]
          );
        }
      }
    }
     
    
  }